# Generated by Django 3.1.4 on 2021-01-05 21:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='Course ID')),
                ('name', models.CharField(db_index=True, max_length=250, verbose_name='Course Name')),
                ('course_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Course Type')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Course Address')),
                ('phone', models.CharField(blank=True, max_length=250, null=True, verbose_name='Course Phone Number')),
                ('website', models.CharField(blank=True, max_length=250, null=True, verbose_name='Course Website')),
                ('description', models.CharField(blank=True, max_length=1025, null=True, verbose_name='Descripton')),
                ('price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Course Price')),
                ('ext_fid', models.CharField(blank=True, max_length=250, null=True, verbose_name='ext_fid')),
                ('ext_cid', models.CharField(blank=True, max_length=250, null=True, verbose_name='ext_cid')),
                ('ext_company', models.CharField(blank=True, max_length=250, null=True, verbose_name='ext_company')),
                ('ext_course', models.CharField(blank=True, max_length=250, null=True, verbose_name='ext_course')),
                ('city', models.CharField(max_length=250, verbose_name='Course City')),
                ('state', models.CharField(db_index=True, max_length=100, verbose_name='Course State')),
                ('zip', models.CharField(max_length=250, verbose_name='Zip Code')),
                ('streetaddress', models.CharField(blank=True, max_length=250, null=True, verbose_name='Street Address')),
                ('county', models.CharField(blank=True, max_length=250, null=True, verbose_name='County')),
                ('lat', models.DecimalField(blank=True, decimal_places=20, max_digits=25, null=True, verbose_name='Tee Latitude')),
                ('lon', models.DecimalField(blank=True, decimal_places=20, max_digits=25, null=True, verbose_name='Tee Longitude')),
                ('holes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Holes')),
                ('ext_holetype', models.CharField(blank=True, max_length=50, null=True, verbose_name='ext_holetype')),
                ('ext_cat', models.CharField(blank=True, max_length=50, null=True, verbose_name='ext_cat')),
                ('ext_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='ext_type')),
                ('ext_fips', models.CharField(blank=True, max_length=50, null=True, verbose_name='ext_fips')),
                ('opdate', models.CharField(blank=True, max_length=25, null=True, verbose_name='opdate')),
                ('archname', models.CharField(blank=True, max_length=250, null=True, verbose_name='archname')),
                ('fee', models.PositiveIntegerField(blank=True, null=True, verbose_name='Course Fee')),
                ('facility_id', models.CharField(blank=True, max_length=25, null=True, verbose_name='Facility ID')),
                ('status', models.CharField(blank=True, max_length=10, null=True, verbose_name='Course Fee')),
                ('whs_course_id', models.CharField(blank=True, max_length=25, null=True, verbose_name='whs_course_id')),
                ('to_confirm', models.CharField(blank=True, max_length=10, null=True, verbose_name='To be Confirmed')),
                ('tg_data_is_correct', models.CharField(blank=True, max_length=10, null=True, verbose_name='Course Data is Correct')),
                ('name_url', models.SlugField(max_length=100, unique=True, verbose_name='Course Name Url')),
                ('city_url', models.SlugField(verbose_name='City Url')),
                ('season_start', models.CharField(blank=True, max_length=10, null=True, verbose_name='Season Start')),
                ('season_end', models.CharField(blank=True, max_length=10, null=True, verbose_name='Season End')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='GPSHole',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id_map_element', models.IntegerField(primary_key=True, serialize=False, verbose_name='Hole Map ID')),
                ('hole', models.CharField(max_length=15, verbose_name='Hole Number')),
                ('latitude', models.DecimalField(blank=True, decimal_places=20, max_digits=25, null=True, verbose_name='Tee Latitude')),
                ('longitud', models.DecimalField(blank=True, decimal_places=20, max_digits=25, null=True, verbose_name='Tee Longitude')),
                ('id_marker', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID Marker')),
                ('id_type', models.CharField(max_length=50, verbose_name='ID Type')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Name Category')),
                ('image', models.CharField(blank=True, max_length=50, null=True, verbose_name='GPS Helper Image')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'GPS Hole Data',
                'verbose_name_plural': 'GPS Hole Data',
            },
        ),
        migrations.CreateModel(
            name='Hole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hole', models.CharField(max_length=15, verbose_name='Hole Number')),
                ('index', models.PositiveIntegerField(blank=True, null=True, verbose_name='Hole Index')),
                ('par', models.PositiveIntegerField(verbose_name='Hole Par')),
                ('distance', models.PositiveIntegerField(verbose_name='Distance')),
            ],
            options={
                'verbose_name': 'Holes',
                'verbose_name_plural': 'Holes',
            },
        ),
        migrations.CreateModel(
            name='PracticeData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('club', models.CharField(choices=[('DR', 'Driver'), ('W3', '3 Wood'), ('W4', '4 Wood'), ('W5', '5 Wood'), ('W6', '6 Wood'), ('W7', '7 Wood'), ('U3', '3 Utility'), ('U4', '4 Utility'), ('U5', '5 Utility'), ('U6', '6 Utility'), ('U7', '7 Utility'), ('i3', '3 Iron'), ('i4', '4 Iron'), ('i5', '5 Iron'), ('i6', '6 Iron'), ('i7', '7 Iron'), ('i8', '8 Iron'), ('i9', '9 Iron'), ('PW', 'Pitching Wedge'), ('UW', 'Utility Wedge'), ('GW', 'Gap Wedge'), ('SW', 'Sand Wedge'), ('LW', 'Lop Wedge'), ('PT', 'Putter')], max_length=50, verbose_name='Club')),
                ('carry', models.PositiveIntegerField(blank=True, null=True, verbose_name='Carry Distance (yds)')),
                ('total', models.PositiveIntegerField(blank=True, null=True, verbose_name='Total Distance (yds)')),
                ('swing_speed', models.PositiveIntegerField(blank=True, null=True, verbose_name='Swing Speed (mph)')),
                ('ball_speed', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ball Speed (mph)')),
                ('launch_angle', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Launch Angle (deg)')),
                ('smash_factor', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Smash Factor')),
                ('apex', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Apex (ft)')),
                ('spin_rate', models.PositiveIntegerField(blank=True, null=True, verbose_name='Spin Rate (rpm)')),
                ('shot_shape', models.CharField(choices=[('H', 'Hook'), ('LD', 'Left Draw'), ('L', 'Left'), ('LF', 'Left Fade'), ('D', 'Draw'), ('ST', 'Straight'), ('F', 'Fade'), ('RD', 'Right Draw'), ('R', 'Right'), ('RF', 'Right Fade'), ('S', 'Slice'), ('SK', 'Shank'), ('ER', 'Hitting Error')], max_length=50, verbose_name='Shot Shape')),
            ],
            options={
                'verbose_name': 'Practice Data',
                'verbose_name_plural': 'Practice Data',
            },
        ),
        migrations.CreateModel(
            name='RoundData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateTimeField(verbose_name='Date Played')),
                ('starting_hole', models.PositiveIntegerField(verbose_name='Starting Hole')),
                ('round_type', models.CharField(choices=[('18', '18 Holes'), ('F9', 'Front 9'), ('B9', 'Back 9')], max_length=50, verbose_name='Round')),
            ],
            options={
                'verbose_name': 'Round Data',
                'verbose_name_plural': 'Round Data',
            },
        ),
        migrations.CreateModel(
            name='ShotData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nr_strokes', models.PositiveIntegerField(verbose_name='Number of Strokes')),
                ('nr_putts', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of Putts')),
                ('fairway_hit', models.CharField(blank=True, choices=[('LO', 'Missed Long'), ('LT', 'Missed Left'), ('RT', 'Missed Right'), ('HT', 'Hit'), ('SH', 'Missed Short'), ('SK', 'Shank'), ('NA', 'NA')], help_text='Fairway Accuracy', max_length=50, null=True, verbose_name='Fairway Accuracy')),
                ('gir_flag', models.CharField(blank=True, choices=[('LO', 'Missed Long'), ('LT', 'Missed Left'), ('RT', 'Missed Right'), ('HT', 'Hit'), ('SH', 'Missed Short'), ('SK', 'Shank'), ('NA', 'NA')], help_text='Green Accuracy', max_length=50, null=True, verbose_name='Green Accuracy')),
                ('putt_accuracy', models.CharField(blank=True, choices=[('LO', 'Missed Long'), ('LT', 'Missed Left'), ('RT', 'Missed Right'), ('HT', 'Hit'), ('SH', 'Missed Short'), ('SK', 'Shank'), ('NA', 'NA')], help_text='Putt Accuracy', max_length=50, null=True, verbose_name='Putt Accuracy')),
                ('hole', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='shots', to='api.hole', verbose_name='Course Hole')),
                ('round_data', models.ForeignKey(default=4, on_delete=django.db.models.deletion.DO_NOTHING, to='api.rounddata', verbose_name='Round Information')),
            ],
            options={
                'verbose_name': 'Shot Data',
                'verbose_name_plural': 'Shot Data',
            },
        ),
        migrations.CreateModel(
            name='Tee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tees', models.CharField(max_length=50, verbose_name='Tee Color')),
                ('rating', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Rating')),
                ('slope', models.PositiveIntegerField(verbose_name='Slope')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tees', to='api.course', verbose_name='Course')),
            ],
            options={
                'verbose_name': 'Tee',
                'verbose_name_plural': 'Tees',
            },
        ),
        migrations.CreateModel(
            name='ShotDataPenalties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('penalties', models.CharField(blank=True, choices=[('S', 'Greenside Bunker'), ('F', 'Fairway Bunker'), ('O', 'Out of Bounds'), ('W', 'Water Hazard'), ('D', 'Drop or Other')], help_text='Penalties', max_length=50, null=True, verbose_name='Penalties')),
                ('shot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shot_penalties', to='api.shotdata', verbose_name='Shot Penalties')),
            ],
            options={
                'verbose_name': 'Shot Data Penalties',
                'verbose_name_plural': 'Shot Data Penalties',
            },
        ),
    ]
