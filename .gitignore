### OSX ###
.DS_Store
.AppleDouble
.LSOverride
.env

### SublimeText ###
# cache files for sublime text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

*.sublime-project
*.sublime-workspace

# sftp configuration file
sftp-config.json

# Basics
*.py[cod]
__pycache__
.pytest_cache

# Logs
logs
*.log
pip-log.txt
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Unit test / coverage reports
.coverage
.tox
nosetests.xml
htmlcov

# Translations
*.mo
*.pot

# Webpack
webpack-stats.json
dist/

# Vim
*~
*.swp
*.swo

# npm
node_modules
*/node_modules/

# Compass
.sass-cache

# User-uploaded media
media/

# Collected staticfiles
*/staticfiles/

.cache/
**/certs

# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw*

# VS code
.vscode
.pythonconfig

# Venv
venv

aws/

zappa_settings.json

golf_caddie.db
golfserverlessdb

test_api.http

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Exclude all .tfvars files, which are likely to contain sentitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
#
*.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc